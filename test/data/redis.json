{
  "$.RedisClient": "sync",
  "$.Multi": "sync",
  "$.createClient": "sync",
  "$.print": "sync",
  "$.RedisClient.prototype.install_stream_listeners": "sync",
  "$.RedisClient.prototype.initialize_retry_vars": "sync",
  "$.RedisClient.prototype.unref": "sync",
  "$.RedisClient.prototype.flush_and_error": "sync",
  "$.RedisClient.prototype.on_error": "sync",
  "$.RedisClient.prototype.do_auth": "sync",
  "$.RedisClient.prototype.on_connect": "sync",
  "$.RedisClient.prototype.init_parser": "sync",
  "$.RedisClient.prototype.on_ready": "sync",
  "$.RedisClient.prototype.on_info_cmd": "sync",
  "$.RedisClient.prototype.ready_check": "sync",
  "$.RedisClient.prototype.send_offline_queue": "sync",
  "$.RedisClient.prototype.connection_gone": "sync",
  "$.RedisClient.prototype.on_data": "sync",
  "$.RedisClient.prototype.return_error": "sync",
  "$.RedisClient.prototype.return_reply": "sync",
  "$.RedisClient.prototype.send_command": "standard",
  "$.RedisClient.prototype.pub_sub_command": "sync",
  "$.RedisClient.prototype.end": "sync",
  "$.RedisClient.prototype.get": "standard",
  "$.RedisClient.prototype.set": "standard",
  "$.RedisClient.prototype.setnx": "standard",
  "$.RedisClient.prototype.setex": "standard",
  "$.RedisClient.prototype.append": "standard",
  "$.RedisClient.prototype.strlen": "standard",
  "$.RedisClient.prototype.del": "standard",
  "$.RedisClient.prototype.exists": "standard",
  "$.RedisClient.prototype.setbit": "standard",
  "$.RedisClient.prototype.getbit": "standard",
  "$.RedisClient.prototype.setrange": "standard",
  "$.RedisClient.prototype.getrange": "standard",
  "$.RedisClient.prototype.substr": "standard",
  "$.RedisClient.prototype.incr": "standard",
  "$.RedisClient.prototype.decr": "standard",
  "$.RedisClient.prototype.mget": "standard",
  "$.RedisClient.prototype.rpush": "standard",
  "$.RedisClient.prototype.lpush": "standard",
  "$.RedisClient.prototype.rpushx": "standard",
  "$.RedisClient.prototype.lpushx": "standard",
  "$.RedisClient.prototype.linsert": "standard",
  "$.RedisClient.prototype.rpop": "standard",
  "$.RedisClient.prototype.lpop": "standard",
  "$.RedisClient.prototype.brpop": "standard",
  "$.RedisClient.prototype.brpoplpush": "standard",
  "$.RedisClient.prototype.blpop": "standard",
  "$.RedisClient.prototype.llen": "standard",
  "$.RedisClient.prototype.lindex": "standard",
  "$.RedisClient.prototype.lset": "standard",
  "$.RedisClient.prototype.lrange": "standard",
  "$.RedisClient.prototype.ltrim": "standard",
  "$.RedisClient.prototype.lrem": "standard",
  "$.RedisClient.prototype.rpoplpush": "standard",
  "$.RedisClient.prototype.sadd": "standard",
  "$.RedisClient.prototype.srem": "standard",
  "$.RedisClient.prototype.smove": "standard",
  "$.RedisClient.prototype.sismember": "standard",
  "$.RedisClient.prototype.scard": "standard",
  "$.RedisClient.prototype.spop": "standard",
  "$.RedisClient.prototype.srandmember": "standard",
  "$.RedisClient.prototype.sinter": "standard",
  "$.RedisClient.prototype.sinterstore": "standard",
  "$.RedisClient.prototype.sunion": "standard",
  "$.RedisClient.prototype.sunionstore": "standard",
  "$.RedisClient.prototype.sdiff": "standard",
  "$.RedisClient.prototype.sdiffstore": "standard",
  "$.RedisClient.prototype.smembers": "standard",
  "$.RedisClient.prototype.zadd": "standard",
  "$.RedisClient.prototype.zincrby": "standard",
  "$.RedisClient.prototype.zrem": "standard",
  "$.RedisClient.prototype.zremrangebyscore": "standard",
  "$.RedisClient.prototype.zremrangebyrank": "standard",
  "$.RedisClient.prototype.zunionstore": "standard",
  "$.RedisClient.prototype.zinterstore": "standard",
  "$.RedisClient.prototype.zrange": "standard",
  "$.RedisClient.prototype.zrangebyscore": "standard",
  "$.RedisClient.prototype.zrevrangebyscore": "standard",
  "$.RedisClient.prototype.zcount": "standard",
  "$.RedisClient.prototype.zrevrange": "standard",
  "$.RedisClient.prototype.zcard": "standard",
  "$.RedisClient.prototype.zscore": "standard",
  "$.RedisClient.prototype.zrank": "standard",
  "$.RedisClient.prototype.zrevrank": "standard",
  "$.RedisClient.prototype.hset": "standard",
  "$.RedisClient.prototype.hsetnx": "standard",
  "$.RedisClient.prototype.hget": "standard",
  "$.RedisClient.prototype.hmset": "standard",
  "$.RedisClient.prototype.hmget": "sync",
  "$.RedisClient.prototype.hincrby": "standard",
  "$.RedisClient.prototype.hdel": "standard",
  "$.RedisClient.prototype.hlen": "standard",
  "$.RedisClient.prototype.hkeys": "standard",
  "$.RedisClient.prototype.hvals": "standard",
  "$.RedisClient.prototype.hgetall": "standard",
  "$.RedisClient.prototype.hexists": "standard",
  "$.RedisClient.prototype.incrby": "standard",
  "$.RedisClient.prototype.decrby": "standard",
  "$.RedisClient.prototype.getset": "standard",
  "$.RedisClient.prototype.mset": "standard",
  "$.RedisClient.prototype.msetnx": "standard",
  "$.RedisClient.prototype.randomkey": "standard",
  "$.RedisClient.prototype.select": "standard",
  "$.RedisClient.prototype.move": "standard",
  "$.RedisClient.prototype.rename": "standard",
  "$.RedisClient.prototype.renamenx": "standard",
  "$.RedisClient.prototype.expire": "standard",
  "$.RedisClient.prototype.expireat": "standard",
  "$.RedisClient.prototype.keys": "standard",
  "$.RedisClient.prototype.dbsize": "standard",
  "$.RedisClient.prototype.auth": "sync",
  "$.RedisClient.prototype.ping": "standard",
  "$.RedisClient.prototype.echo": "standard",
  "$.RedisClient.prototype.save": "standard",
  "$.RedisClient.prototype.bgsave": "standard",
  "$.RedisClient.prototype.bgrewriteaof": "standard",
  "$.RedisClient.prototype.shutdown": "standard",
  "$.RedisClient.prototype.lastsave": "standard",
  "$.RedisClient.prototype.type": "standard",
  "$.RedisClient.prototype.multi": "sync",
  "$.RedisClient.prototype.MULTI": "sync",
  "$.RedisClient.prototype.exec": "standard",
  "$.RedisClient.prototype.discard": "standard",
  "$.RedisClient.prototype.sync": "standard",
  "$.RedisClient.prototype.flushdb": "standard",
  "$.RedisClient.prototype.flushall": "standard",
  "$.RedisClient.prototype.sort": "standard",
  "$.RedisClient.prototype.info": "standard",
  "$.RedisClient.prototype.monitor": "standard",
  "$.RedisClient.prototype.ttl": "standard",
  "$.RedisClient.prototype.persist": "standard",
  "$.RedisClient.prototype.slaveof": "standard",
  "$.RedisClient.prototype.debug": "standard",
  "$.RedisClient.prototype.config": "standard",
  "$.RedisClient.prototype.subscribe": "standard",
  "$.RedisClient.prototype.unsubscribe": "standard",
  "$.RedisClient.prototype.psubscribe": "standard",
  "$.RedisClient.prototype.punsubscribe": "standard",
  "$.RedisClient.prototype.publish": "standard",
  "$.RedisClient.prototype.watch": "standard",
  "$.RedisClient.prototype.unwatch": "standard",
  "$.RedisClient.prototype.cluster": "standard",
  "$.RedisClient.prototype.restore": "standard",
  "$.RedisClient.prototype.migrate": "standard",
  "$.RedisClient.prototype.dump": "standard",
  "$.RedisClient.prototype.object": "standard",
  "$.RedisClient.prototype.client": "standard",
  "$.RedisClient.prototype.eval": "sync",
  "$.RedisClient.prototype.evalsha": "standard",
  "$.RedisClient.prototype.bitcount": "standard",
  "$.RedisClient.prototype.bitop": "standard",
  "$.RedisClient.prototype.bitpos": "standard",
  "$.RedisClient.prototype.hincrbyfloat": "standard",
  "$.RedisClient.prototype.incrbyfloat": "standard",
  "$.RedisClient.prototype.pexpire": "standard",
  "$.RedisClient.prototype.pexpireat": "standard",
  "$.RedisClient.prototype.pfadd": "standard",
  "$.RedisClient.prototype.pfcount": "standard",
  "$.RedisClient.prototype.pfmerge": "standard",
  "$.RedisClient.prototype.psetex": "standard",
  "$.RedisClient.prototype.pubsub": "standard",
  "$.RedisClient.prototype.pttl": "standard",
  "$.RedisClient.prototype.quit": "standard",
  "$.RedisClient.prototype.script": "standard",
  "$.RedisClient.prototype.slowlog": "standard",
  "$.RedisClient.prototype.time": "standard",
  "$.RedisClient.prototype.zlexcount": "standard",
  "$.RedisClient.prototype.zrangebylex": "standard",
  "$.RedisClient.prototype.zremrangebylex": "standard",
  "$.RedisClient.prototype.scan": "standard",
  "$.RedisClient.prototype.sscan": "standard",
  "$.RedisClient.prototype.hscan": "standard",
  "$.RedisClient.prototype.zscan": "standard",
  "$.RedisClient.prototype.setMaxListeners": "sync",
  "$.RedisClient.prototype.emit": "sync",
  "$.RedisClient.prototype.addListener": "sync",
  "$.RedisClient.prototype.once": "sync",
  "$.RedisClient.prototype.removeListener": "sync",
  "$.RedisClient.prototype.removeAllListeners": "sync",
  "$.RedisClient.prototype.listeners": "sync",
  "$.Multi.prototype.get": "sync",
  "$.Multi.prototype.set": "sync",
  "$.Multi.prototype.setnx": "sync",
  "$.Multi.prototype.setex": "sync",
  "$.Multi.prototype.append": "sync",
  "$.Multi.prototype.strlen": "sync",
  "$.Multi.prototype.del": "sync",
  "$.Multi.prototype.exists": "sync",
  "$.Multi.prototype.setbit": "sync",
  "$.Multi.prototype.getbit": "sync",
  "$.Multi.prototype.setrange": "sync",
  "$.Multi.prototype.getrange": "sync",
  "$.Multi.prototype.substr": "sync",
  "$.Multi.prototype.incr": "sync",
  "$.Multi.prototype.decr": "sync",
  "$.Multi.prototype.mget": "sync",
  "$.Multi.prototype.rpush": "sync",
  "$.Multi.prototype.lpush": "sync",
  "$.Multi.prototype.rpushx": "sync",
  "$.Multi.prototype.lpushx": "sync",
  "$.Multi.prototype.linsert": "sync",
  "$.Multi.prototype.rpop": "sync",
  "$.Multi.prototype.lpop": "sync",
  "$.Multi.prototype.brpop": "sync",
  "$.Multi.prototype.brpoplpush": "sync",
  "$.Multi.prototype.blpop": "sync",
  "$.Multi.prototype.llen": "sync",
  "$.Multi.prototype.lindex": "sync",
  "$.Multi.prototype.lset": "sync",
  "$.Multi.prototype.lrange": "sync",
  "$.Multi.prototype.ltrim": "sync",
  "$.Multi.prototype.lrem": "sync",
  "$.Multi.prototype.rpoplpush": "sync",
  "$.Multi.prototype.sadd": "sync",
  "$.Multi.prototype.srem": "sync",
  "$.Multi.prototype.smove": "sync",
  "$.Multi.prototype.sismember": "sync",
  "$.Multi.prototype.scard": "sync",
  "$.Multi.prototype.spop": "sync",
  "$.Multi.prototype.srandmember": "sync",
  "$.Multi.prototype.sinter": "sync",
  "$.Multi.prototype.sinterstore": "sync",
  "$.Multi.prototype.sunion": "sync",
  "$.Multi.prototype.sunionstore": "sync",
  "$.Multi.prototype.sdiff": "sync",
  "$.Multi.prototype.sdiffstore": "sync",
  "$.Multi.prototype.smembers": "sync",
  "$.Multi.prototype.zadd": "sync",
  "$.Multi.prototype.zincrby": "sync",
  "$.Multi.prototype.zrem": "sync",
  "$.Multi.prototype.zremrangebyscore": "sync",
  "$.Multi.prototype.zremrangebyrank": "sync",
  "$.Multi.prototype.zunionstore": "sync",
  "$.Multi.prototype.zinterstore": "sync",
  "$.Multi.prototype.zrange": "sync",
  "$.Multi.prototype.zrangebyscore": "sync",
  "$.Multi.prototype.zrevrangebyscore": "sync",
  "$.Multi.prototype.zcount": "sync",
  "$.Multi.prototype.zrevrange": "sync",
  "$.Multi.prototype.zcard": "sync",
  "$.Multi.prototype.zscore": "sync",
  "$.Multi.prototype.zrank": "sync",
  "$.Multi.prototype.zrevrank": "sync",
  "$.Multi.prototype.hset": "sync",
  "$.Multi.prototype.hsetnx": "sync",
  "$.Multi.prototype.hget": "sync",
  "$.Multi.prototype.hmset": "sync",
  "$.Multi.prototype.hmget": "sync",
  "$.Multi.prototype.hincrby": "sync",
  "$.Multi.prototype.hdel": "sync",
  "$.Multi.prototype.hlen": "sync",
  "$.Multi.prototype.hkeys": "sync",
  "$.Multi.prototype.hvals": "sync",
  "$.Multi.prototype.hgetall": "sync",
  "$.Multi.prototype.hexists": "sync",
  "$.Multi.prototype.incrby": "sync",
  "$.Multi.prototype.decrby": "sync",
  "$.Multi.prototype.getset": "sync",
  "$.Multi.prototype.mset": "sync",
  "$.Multi.prototype.msetnx": "sync",
  "$.Multi.prototype.randomkey": "sync",
  "$.Multi.prototype.select": "sync",
  "$.Multi.prototype.move": "sync",
  "$.Multi.prototype.rename": "sync",
  "$.Multi.prototype.renamenx": "sync",
  "$.Multi.prototype.expire": "sync",
  "$.Multi.prototype.expireat": "sync",
  "$.Multi.prototype.keys": "sync",
  "$.Multi.prototype.dbsize": "sync",
  "$.Multi.prototype.auth": "sync",
  "$.Multi.prototype.ping": "sync",
  "$.Multi.prototype.echo": "sync",
  "$.Multi.prototype.save": "sync",
  "$.Multi.prototype.bgsave": "sync",
  "$.Multi.prototype.bgrewriteaof": "sync",
  "$.Multi.prototype.shutdown": "sync",
  "$.Multi.prototype.lastsave": "sync",
  "$.Multi.prototype.type": "sync",
  "$.Multi.prototype.multi": "sync",
  "$.Multi.prototype.exec": "standard",
  "$.Multi.prototype.discard": "sync",
  "$.Multi.prototype.sync": "sync",
  "$.Multi.prototype.flushdb": "sync",
  "$.Multi.prototype.flushall": "sync",
  "$.Multi.prototype.sort": "sync",
  "$.Multi.prototype.info": "sync",
  "$.Multi.prototype.monitor": "sync",
  "$.Multi.prototype.ttl": "sync",
  "$.Multi.prototype.persist": "sync",
  "$.Multi.prototype.slaveof": "sync",
  "$.Multi.prototype.debug": "sync",
  "$.Multi.prototype.config": "sync",
  "$.Multi.prototype.subscribe": "sync",
  "$.Multi.prototype.unsubscribe": "sync",
  "$.Multi.prototype.psubscribe": "sync",
  "$.Multi.prototype.punsubscribe": "sync",
  "$.Multi.prototype.publish": "sync",
  "$.Multi.prototype.watch": "sync",
  "$.Multi.prototype.unwatch": "sync",
  "$.Multi.prototype.cluster": "sync",
  "$.Multi.prototype.restore": "sync",
  "$.Multi.prototype.migrate": "sync",
  "$.Multi.prototype.dump": "sync",
  "$.Multi.prototype.object": "sync",
  "$.Multi.prototype.client": "sync",
  "$.Multi.prototype.eval": "sync",
  "$.Multi.prototype.evalsha": "sync",
  "$.Multi.prototype.bitcount": "sync",
  "$.Multi.prototype.bitop": "sync",
  "$.Multi.prototype.bitpos": "sync",
  "$.Multi.prototype.hincrbyfloat": "sync",
  "$.Multi.prototype.incrbyfloat": "sync",
  "$.Multi.prototype.pexpire": "sync",
  "$.Multi.prototype.pexpireat": "sync",
  "$.Multi.prototype.pfadd": "sync",
  "$.Multi.prototype.pfcount": "sync",
  "$.Multi.prototype.pfmerge": "sync",
  "$.Multi.prototype.psetex": "sync",
  "$.Multi.prototype.pubsub": "sync",
  "$.Multi.prototype.pttl": "sync",
  "$.Multi.prototype.quit": "sync",
  "$.Multi.prototype.script": "sync",
  "$.Multi.prototype.slowlog": "sync",
  "$.Multi.prototype.time": "sync",
  "$.Multi.prototype.zlexcount": "sync",
  "$.Multi.prototype.zrangebylex": "sync",
  "$.Multi.prototype.zremrangebylex": "sync",
  "$.Multi.prototype.scan": "sync",
  "$.Multi.prototype.sscan": "sync",
  "$.Multi.prototype.hscan": "sync",
  "$.Multi.prototype.zscan": "sync"
}

